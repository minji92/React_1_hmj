{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/navbar.jsx","app.jsx","components/simpleHabit.jsx","index.js"],"names":["Habit","handleIncrement","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","console","log","this","name","count","className","onClick","PureComponent","HabitAddForm","memo","formRef","React","createRef","inputRef","ref","action","onSubmit","event","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","SimpleHabit","useState","setCount","spanRef","useRef","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PA8CeA,E,4MAlCXC,gBAAkB,WACd,EAAKC,MAAMC,YAAY,EAAKD,MAAME,Q,EAGtCC,gBAAkB,WACd,EAAKH,MAAMI,YAAY,EAAKJ,MAAME,Q,EAGtCG,aAAe,WACX,EAAKL,MAAMM,SAAS,EAAKN,MAAME,Q,uDAjBnC,WACIK,QAAQC,IAAI,UAAWC,KAAKT,MAAME,MAAMQ,KAAK,c,kCAGjD,WACIH,QAAQC,IAAI,UAAWC,KAAKT,MAAME,MAAMQ,KAAK,mB,oBAejD,WAAU,IAAD,EAEkBD,KAAKT,MAAME,MAA1BQ,EAFH,EAEGA,KAAMC,EAFT,EAESA,MAEd,OADAJ,QAAQC,IAAI,SAASC,KAAKT,MAAME,MAAMQ,MAElC,qBAAIE,UAAU,QAAd,UACI,sBAAMA,UAAU,aAAhB,SAA8BF,IAC9B,sBAAME,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAASJ,KAAKV,gBAA9D,SACI,mBAAGa,UAAU,yBAEjB,wBAAQA,UAAU,8BAA8BC,QAASJ,KAAKN,gBAA9D,SACI,mBAAGS,UAAU,0BAEjB,wBAAQA,UAAU,4BAA4BC,QAASJ,KAAKJ,aAA5D,SACI,mBAAGO,UAAU,0B,GArCbE,iBCsBLC,EAtBMC,gBACjB,SAAAhB,GACI,IAAMiB,EAAUC,IAAMC,YAChBC,EAAWF,IAAMC,YASvB,OACI,uBAAME,IAAKJ,EAASK,OAAO,GAAGV,UAAU,UAAUW,SARrC,SAAAC,GACbA,EAAMC,iBACN,IAAMf,EAAOU,EAASM,QAAQC,MAC9BjB,GAAQV,EAAM4B,MAAMlB,GACpBO,EAAQS,QAAQG,SAIhB,UACI,uBAAOR,IAAKD,EAAUU,KAAK,OAAOlB,UAAU,YAAYmB,YAAY,UACpE,wBAAQnB,UAAU,aAAlB,uBC6BDoB,E,4MAtCXjC,gBAAkB,SAAAG,GACd,EAAKF,MAAMC,YAAYC,I,EAG3BC,gBAAkB,SAAAD,GACd,EAAKF,MAAMI,YAAYF,I,EAG3BG,aAAe,SAAAH,GACX,EAAKF,MAAMM,SAASJ,I,EAGxB+B,UAAY,SAAAvB,GACR,EAAKV,MAAM4B,MAAMlB,I,4CAGrB,WAAU,IAAD,OAEL,OADAH,QAAQC,IAAI,UAER,qCACI,cAAC,EAAD,CAAcoB,MAAOnB,KAAKwB,YAC1B,6BACKxB,KAAKT,MAAMkC,OAAOC,KAAI,SAAAjC,GAAK,OACxB,cAAC,EAAD,CAEIA,MAAOA,EACPD,YAAa,EAAKF,gBAClBK,YAAa,EAAKD,gBAClBG,SAAU,EAAKD,cAJVH,EAAMkC,SAQvB,wBAAQxB,UAAU,eAAeC,QAASJ,KAAKT,MAAMqC,QAArD,8B,GApCKC,aCWNC,E,4JAZX,WAEI,OADAhC,QAAQC,IAAI,UAER,gCACI,mBAAGI,UAAU,4BACb,iDACA,sBAAMA,UAAU,eAAhB,SAAgCH,KAAKT,MAAMwC,oB,GAPtC1B,iB,GCIHwB,Y,aCoBHG,EAxBK,SAACzC,GAAW,IAAD,EAED0C,mBAAS,GAFR,mBAEpB/B,EAFoB,KAEbgC,EAFa,KAGrBC,EAAUC,mBAUhB,OAJAC,qBAAU,WACNvC,QAAQC,IAAI,oBAAsBG,KACnC,IAGC,qBAAIC,UAAU,QAAd,UACI,sBAAMS,IAAKuB,EAAShC,UAAU,aAA9B,qBACA,sBAAMA,UAAU,cAAhB,SAA+BD,IAC/B,wBAAQC,UAAU,8BAA8BC,QAZhC,WACpB8B,EAAShC,EAAO,IAWZ,SACI,mBAAGC,UAAU,6BCb7BmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.cb43460d.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n\r\n    componentDidMount() { // component가 ui상에 등록이 되고나서 호출\r\n        console.log('habit :' +this.props.habit.name+' mounted');\r\n    }\r\n\r\n    componentWillUnmount() { // component가 ui상에서 지우기전에 호출\r\n        console.log('habit :' +this.props.habit.name+' will unmount');\r\n    }\r\n\r\n    handleIncrement = () => {\r\n        this.props.onIncrement(this.props.habit);\r\n    };\r\n\r\n    handleDecrement = () => {\r\n        this.props.onDecrement(this.props.habit);\r\n    };\r\n    \r\n    handleDelete = () => {\r\n        this.props.onDelete(this.props.habit);\r\n    };\r\n// 민지님팟팅\r\n    render() {\r\n        \r\n        const { name, count} = this.props.habit;\r\n        console.log('habit:'+this.props.habit.name); //김태훈\r\n        return (\r\n            <li className=\"habit\">\r\n                <span className=\"habit-name\">{name}</span>\r\n                <span className=\"habit-count\">{count}</span>\r\n                <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                    <i className=\"fas fa-minus-square\"></i>\r\n                </button>\r\n                <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo(\r\n    props => {\r\n        const formRef = React.createRef();\r\n        const inputRef = React.createRef();\r\n    \r\n        const onSubmit = event => {\r\n            event.preventDefault();\r\n            const name = inputRef.current.value;\r\n            name && props.onAdd(name);\r\n            formRef.current.reset(); // 폼에있는 모든 input값 reset\r\n        };\r\n    \r\n        return (\r\n            <form ref={formRef} action=\"\" className=\"addForm\" onSubmit={onSubmit}>\r\n                <input ref={inputRef} type=\"text\" className=\"add-input\" placeholder=\"Habit\" />\r\n                <button className=\"add-button\">Add</button>\r\n    \r\n            </form>\r\n        );            \r\n    }\r\n);\r\n\r\nexport default HabitAddForm;\r\n","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm';\r\n\r\nclass Habits extends Component {\r\n    \r\n\r\n    // 로직 작성\r\n    handleIncrement = habit => { \r\n        this.props.onIncrement(habit);\r\n    };\r\n\r\n    handleDecrement = habit => {\r\n        this.props.onDecrement(habit);\r\n    };\r\n    \r\n    handleDelete = habit => {\r\n        this.props.onDelete(habit);\r\n    };\r\n\r\n    handleAdd = name => {\r\n        this.props.onAdd(name);\r\n    };\r\n\r\n    render() {\r\n        console.log('habits');\r\n        return (\r\n            <>\r\n                <HabitAddForm onAdd={this.handleAdd}/>\r\n                <ul>\r\n                    {this.props.habits.map(habit => (\r\n                        <Habit\r\n                            key={habit.id}\r\n                            habit={habit}\r\n                            onIncrement={this.handleIncrement}\r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick={this.props.onReset}>Reset all</button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { PureComponent } from 'react';\r\n\r\nclass Navbar extends PureComponent {\r\n    render() {\r\n        console.log('navbar');\r\n        return (\r\n            <div>\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\nimport './app.css';\nimport Habits from './components/habits';\nimport Navbar from './components/navbar';\n\n\nclass App extends Component {\n  state = {\n    habits: [ // habits data\n        { id: 1, name: 'Reading', count: 0 },\n        { id: 2, name: 'Running', count: 0 },\n        { id: 3, name: 'Coding', count: 0 },\n    ],\n};\n\n// 로직 작성\nhandleIncrement = habit => { \n    //console.log('handleIncrement $(habit.name)');\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id) {\n        return { ...habit, count: habit.count +1 }; // 새로운 habit을 return한다 안의 data는 같고 겉의 obj가 바뀌는거 \n      }\n      return item; //아이템아이디랑 해빗아이디랑 같지 안하면 기존값 그대로 불러옴\n    })\n   // this.setState({ habits = habits }); 키 = 밸류 근데 이렇게 일하면 그냥 하나로써수있음\n   this.setState({ habits });\n};\n\nhandleDecrement = habit => {\n    //console.log('handleDecrement $(habit.name)');\n    const habits = this.state.habits.map(item => {\n      if(item.id === habit.id) {\n        const count = habit.count -1;\n        return { ...habit, count: count < 0 ? 0 : count}; // 새로운 habit을 return한다 안의 data는 같고 겉의 obj가 바뀌는거 \n      }\n      return item; //아이템아이디랑 해빗아이디랑 같지 안하면 기존값 그대로 불러옴\n    })\n   this.setState({ habits });\n};\n\nhandleDelete = habit => {\n  //console.log('handleDelete $(habit.name)');\n  const habits = this.state.habits.filter(item => item.id !== habit.id);\n  this.setState({ habits });\n};\n\nhandleAdd = name => {\n  const habits = [...this.state.habits, {id: Date.now(), name, count:0}];\n  this.setState({ habits });\n};\n\nhandleReset = () => {\n  \n  const habits = this.state.habits.map(habit => {\n    if (habit.count !== 0) {\n      return { ...habit, count: 0};\n    }\n    return habit;\n  \n  });\n  this.setState({ habits });\n};\n\n  render() {\n    console.log('app');\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter(item => item.count > 0).length}\n        />\n        <Habits \n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","import React, { useEffect, useRef, useState } from 'react';\r\n\r\nconst SimpleHabit = (props) => {\r\n\r\n    const [count, setCount] = useState(0); // count와 업데이트 가능한 setcount를 정의하고 usestate호출하고 초기값 적어주면됨\r\n    const spanRef = useRef(); //한번 만들고 메모리에 저장하고 재사용\r\n\r\n    const handleIncrement = () => {\r\n        setCount(count +1);\r\n    };\r\n    \r\n    useEffect(() => { //didmount, will mount\r\n        console.log('mounted & updated' + count);\r\n    }, []); // [] : 처음에만 호출, [count] : 카운될 때마다 호출, []자체를 안써주면 그냥 카운트될때마다 호출하는거랑 똑같음\r\n\r\n    return (\r\n        <li className=\"habit\">\r\n            <span ref={spanRef} className=\"habit-name\">Reading</span>\r\n            <span className=\"habit-count\">{count}</span>\r\n            <button className=\"habit-button habit-increase\" onClick={handleIncrement}>\r\n                <i className=\"fas fa-plus-square\"></i>\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default SimpleHabit;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all.js';\nimport SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SimpleHabit/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}